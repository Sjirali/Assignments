
@{
    ViewBag.Title = "About";
}

<h3>Partial views in ASP.NET</h3>
<p>
    A partial view is a Razor markup file (.cshtml) without an @@page directive that renders HTML output within another markup file's rendered output.
</p>
<p>
    The term partial view is used when developing either an MVC app, where markup files are called views, or a Razor Pages app, where markup files are called pages.
</p>
<p>
    <h3>When to use partial views</h3>
</p>
<p>
    <ul>
        Partial views are an effective way to:

        <li>Break up large markup files into smaller components.</li>
        In a large, complex markup file composed of several logical pieces, there's an advantage to working with each piece isolated into a partial view. The code in the markup file is manageable because the markup only contains the overall page structure and references to partial views.

        <li> Reduce the duplication of common markup content across markup files.</li>

        When the same markup elements are used across markup files, a partial view removes the duplication of markup content into one partial view file. When the markup is changed in the partial view, it updates the rendered output of the markup files that use the partial view. Partial views shouldn't be used to maintain common layout elements. Common layout elements should be specified in _Layout.cshtml files.
        Don't use a partial view where complex rendering logic or code execution is required to render the markup. Instead of a partial view, use a view component.
    </ul>
</p>